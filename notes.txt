* Stochastic theory. Optimal Control and Estimation, Robert F Stengel
* thrun book: upto chapter 7
* LIDAR as graphical model
* Modeling mobility and sensors of neato
* Pro Git 
* basics of sensors
pipeline: 
misc/kinect
misc/structured lighting
VR/sensors/indoor scene segmentation...structured lighting
VR/sensors/experimental chacterization of flash LADARS
VR/sensors/3D mapping...simulation

* what are existing simulators doing? gazebo, VREP, webots

* data logging: simple, as per mshomin

* MRPL
lectures/
labs/
neato API
mobile robot exercises

* simulator
OOP in MATLAB

in lineObject.m:
why is there an empty private Access methods block?
any style guide followed for matlab by shomin?
i am guessing path is storing a set of poses
cyclic refers to the type of motion of the lineObject, not whether the shape is cyclic or not
what if time exceeds the time in the path? error will be thrown. should have a check which will allow object to stop.
ellipses to break line in code
think about implementing collision checks in the simulator
the handle abstract class is important
what is the meta.class
mshomin said that probably won't bother with the bumper sensors
option for introducing delay: right now different frequency updates are just hardcoded.
we should devise tests for each simulator version before releasing it on the course
any way of telling what a particular .m file is?

cell evaln in matlab editor
sensor simulations: steep angle, each scan is not instantaneous: parameter to be chosen in number of rays
delay in scan itself: use one-shot timers for events
laser delay not used right now

in neato.m
L56: how is this encoder delay decided? approximately
L67: why the check on nargins?
L68: how does the constructor automatically know what r is? a constructor can only return one argument, and that is the object constructed
L84: functions of stamper and last_update. 
robot has only one clock on the gumstick. so encoder may be late, but sensor is less well-characterized
hokuyo on robot might be basis for ground truth
L88: timer is quite subtle
L97: ? 
warning turned off generally will flush warning queue. so this line ensures that all other warnings will remain there.
L104: don't know about web sockets
L188: why sending velocity here, when setting it is enough and then simUpdate will carry things out?
L297: so many variables, ask meaning
one plot handle per continuous line segment
what if you clear the variables, how does the robot still persist? because of the timer. check test_raycast.m L11
does robot 'disappear' if moved too far out of the map?

in simRobot.m
written by Al?
why does the instance have to be fired up right before start in the case of real-time?
what is a sliding vector?
i think here is one place where non-idealities can be incorporated: in the FIFO, in the delays
check the logging here
L178: why this way to get time?
sendVelocities decoupled from updating state
mex: compiles C++ to shared object which can be called by MATLAB
in neato only want to do simulation update
think about using one-shot timer for velocity update first

in lineMap.m
how exactly is raycast working?
is the test t <= 1 required? yes, because the ray itself is of finite length!
L42: so t also gives directly the fraction of range of ray
L92: ng is for removing spurious edges, confirm

SimSubscriber?

candidates for non-idealities (only by looking at code): delays, FIFO, frequency of updates, will need to tinker with the time values in timer, misalignment of laser scan

---------

Experimental Characterization of Commercial Flash Ladar Devices

Scanning from a moving platform introduces motion artifacts: also true for 360 count laser. Examine effects of range, reflectivity and angle of incidence on range measurements.
What is saturation of a sensor?


